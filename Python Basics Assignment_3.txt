Q1. Why are functions advantageous to have in your programs?                                                                                                                                                                                                                                           Ans.                                                                                                                                                                                                                                                                                                                                                            1) Modularity and Code Reusability: Functions allow you to break down your code into smaller, self-contained units of logic.                                                                                                                      2) Abstraction and Encapsulation: Functions allow you to abstract away complex operations or algorithms behind a simple interface.                                                                                                      3) Code Readability: Functions make your code more readable by providing a higher-level view of the program's logic.                                                                                                                             4) Debugging and Testing: Functions make it easier to debug and test your code. Since functions are self-contained units, you can isolate and test them individually.                                     5) Performance Optimization: Functions can improve performance by promoting code reuse and allowing you to optimize specific sections independently.                                                                       

Q2. When does the code in a function run: when its specified or when its called?                                                                                                                                                                                                            Ans.                                                                                                                                                                                                                                                                                                                                                           The code inside a function runs when the function is called. Defining a function alone does not execute its code; it only defines the function's behavior and creates a callable entity in the program's memory. When you call a function, you use its name followed by parentheses, which may contain arguments if the function expects any.                                                                              

Q3. What statement creates a function?                                                                                                                                                                                                                                                                                        Ans.                                                                                                                                                                                                                                                                                                                                                           In Python, the statement that creates a function is called a "function definition" or a "function declaration." The 'def' keyword is used to define a function.                                                                

Q4. What is the difference between a function and a function call?                                                                                                                                                                                                                                     Ans.                                                                                                                                                                                                                                                                                                                                                           The terms 'function' and 'function call' refer to different aspects of using functions.                                                                                                                                                                                                    -Function: A function is a named block of reusable code that performs a specific task or a series of tasks.                                                                                                                                                                               It encapsulates a set of instructions or operations that can be executed by calling the function.                                                                                                                                                          -Function Call: A function call, also known as a function invocation, is the act of executing or triggering a function to perform its defined operations.                                                                                                    It is the point in the program where the control flow transfers to the function's code, executes it, and then returns back to the point of the function call.                                                              To call a function, you use the function's name followed by parentheses, optionally providing any required arguments or parameters.                                                                                  

Q5. How many global scopes are there in a Python program? How many local scopes?                                                                                                                                                                                                Ans.                                                                                                                                                                                                                                                                                                                                                           In a Python program, there is only one global scope, and it exists throughout the entire program.                                                                                                                                                                        -The global scope is the outermost scope and is accessible from anywhere within the program.                                                                                                                                                                             -Variables defined in the global scope are known as global variables, and they can be accessed and modified from any part of the program, including within functions.                                      -On the other hand, local scopes are created whenever a function is called. Each function call creates a new local scope, which is separate from the global scope.                                              -Local scopes are temporary and exist only for the duration of the function call.                                                                                                                                                                                                          -Variables defined within a function are considered local variables and are accessible only within that particular function's scope.                                                                                                              -Local variables are not visible or accessible outside the function.                                                                                                                                                                                                                                        

Q6. What happens to variables in a local scope when the function call returns?                                                                                                                                                                                                              Ans.                                                                                                                                                                                                                                                                                                                                                            When a function call returns in Python, the local variables within that function's scope are deallocated from memory and cease to exist.                                                                                               The scope of local variables is limited to the duration of the function call, and they are automatically destroyed once the function returns or completes its execution.                                         

Q7. What is the concept of a return value? Is it possible to have a return value in an expression?                                                                                                                                                                             
Ans.                                                                                                                                                                                                                                                                                                                                                           The concept of a return value is associated with functions in programming.                                                                                                                                                                                                                 A return value is the value that a function can send back to the caller once it completes its execution.                                                                                                                                                             When a function produces a result or needs to pass information back to the calling code, it uses the return statement to specify the value to be returned.                                                              

Q8. If a function does not have a return statement, what is the return value of a call to that function?                                                                                                                                                                  Ans.                                                                                                                                                                                                                                                                                                                                                            If a function does not have a return statement, the return value of a call to that function is 'None'. In Python, when a function completes its execution without encountering a return statement or with a return statement that does not specify a value, the function implicitly returns 'None'.                                                                                                                                                                                 

Q9. How do you make a function variable refer to the global variable?                                                                                                                                                                                                                               Ans.                                                                                                                                                                                                                                                                                                                                                            In Python, you can make a function variable refer to a global variable by using the 'global' keyword. When you declare a variable as 'global' within a function, it indicates that the variable is referring to the 'global' variable with the same name, rather than creating a new local variable.                                                                                                                                                          

Q10. What is the data type of None?                                                                                                                                                                                                                                                                                                Ans.                                                                                                                                                                                                                                                                                                                                                            In Python, None is a special constant that represents the absence of a value or the null value. It is considered a data type of its own, commonly referred to as the NoneType.                   The NoneType is a built-in type in Python and has only one possible value, which is None.                                                                                                                                                                                          

Q11. What does the sentence import areallyourpetsnamederic do?                                                                                                                                                                                                                                      Ans.                                                                                                                                                                                                                                                                                                                                                            The sentence "import areallyourpetsnamederic" is not a valid Python import statement and would result in a ModuleNotFoundError.                                                                                                In Python, the import statement is used to import modules, which are separate Python files containing reusable code.                                                                                                                      When you import a module, you gain access to its functions, classes, and other defined objects.                                                                                                                                                                            

Q12. If you had a bacon() feature in a spam module, what would you call it after importing spam?                                                                                                                                                                          Ans.                                                                                                                                                                                                                                                                                                                                                            The sentence "import areallyourpetsnamederic" is not a valid Python import statement and would result in a ModuleNotFoundError.                                                                                                In Python, the import statement is used to import modules, which are separate Python files containing reusable code.                                                                                                                          When you import a module, you gain access to its functions, classes, and other defined objects.                                                                                                                                                                            

Q13. What can you do to save a programme from crashing if it encounters an error?                                                                                                                                                                                                    Ans.                                                                                                                                                                                                                                                                                                                                                            To prevent a program from crashing when it encounters an error, you can use error handling techniques to catch and handle exceptions.                                                                               Python provides built-in mechanisms for handling exceptions, which allow you to gracefully handle errors and prevent the program from terminating abruptly.                                          One common approach is to use a try-except block to catch exceptions and provide alternative code or error handling logic.                                                                                                               The code that may potentially raise an exception is placed within the try block, and any corresponding exception handling code is written in the except block.                                                    

Q14. What is the purpose of the try clause? What is the purpose of the except clause?                                                                                                                                                                                                  Ans.                                                                                                                                                                                                                                                                                                                                                            The try and except clauses in Python are used together to implement error handling and exception handling mechanisms.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              -The purpose of the try clause is to enclose a block of code that may potentially raise an exception.                                                                                                                                                                    It allows you to specify sections of code where you anticipate an error or exception might occur.                                                                                                                                                                     By placing this code within the try block, you indicate that you are prepared to handle any exceptions that might be raised within that block.                                                                                                                                                                                                                                                                                                                                                                                                                                                         -The purpose of the except clause is to define the handling of specific types of exceptions that may be raised within the corresponding try block.                                                                     Each except block specifies the type of exception it can handle, followed by the code that should be executed if that specific exception is raised.